#!/bin/bash
# Auto sync from local to UNSW remote directories
zid="z5209948"
folder="~/code/"
sync_interval="1"
is_remote="0"
is_create_config="0"

#Define dosync
dosync() {
  if [ $is_remote = "0" ]; then
    #Standard sync
    rsync --exclude '.syncconfig' -q -a -e ssh ${1} ${remotedir}
  else
    #Set reverse sync from remote
    rsync --exclude '.syncconfig' -q -a -e ssh ${remotedir} ${1}
  fi
}

#Define dosync
zsync_help() {
    echo -e "${Yellow} »» Usage: zsync <local-dir> <remote-dir> [interval{1s}]"
    echo ""
    echo -e " -r\tReverses sync to remote from local"
    echo -e " -h\tOpens this help menu"
    echo -e " -s\tCreates a default config to use on this folder"
    echo -e " -s\t\t -> Config is used by running zsync"
    echo  ""
}

#Set sync from config
if [ -f ".syncconfig" ] && [ "$1" != "-x" ]; then
  echo -e "${Blue} »» Found config file; setting up sync..."
  from=`cat ./.syncconfig | cut -d " " -f1`
  to=`cat ./.syncconfig | cut -d " " -f2`
  sync_interval=`cat ./.syncconfig | cut -d " " -f3`
  zsync -x "${from}" "${to}" "${sync_interval}"
  exit
fi

#Check for flags
for arg in "$@"
do
  #Check for help arg
  if [ $arg = "-h" ]; then
    zsync_help
    exit
  elif [ $arg = "-s" ]; then
    #Delete if exists
    if [ -f ".syncconfig" ]; then
      rm .syncconfig
    fi

    #Set create config
    is_create_config="1"
  elif [ $arg = "-r" ]; then
    #Set reverse sync
    is_remote="1"
  fi
done 

#Remove flag args
for arg 
do
  shift
  if [[ "$arg" =~ ^[-][a-z]?$ ]]; then 
    continue 
  fi
  set -- "$@" "$arg"
done

if [ "$#" -lt 2 ];
then
  echo -e "${Yellow} »» Usage: zsync <local-dir> <remote-dir> [interval{1s}]"
  echo -e "${Yellow} »» Use zsync -h for all options."
  exit
fi

#Set remote dir as var
remotedir="${zid}@cse.unsw.edu.au:${folder}${2}"

#Test sync successful
echo -e "${Blue} »» Testing sync..."
dosync


#Create config
if [ "$is_create_config" = "1" ]; then
  echo -e "${Blue} »» Creating new config file..."

  if [ "${3}" = "" ]; then
    timer="0"
  else
    timer="${3}"
  fi

  if [ $is_remote = "0" ]; then
    echo "${1}" "${2}" "${timer}" > .syncconfig
  else 
    echo "${2}" "${1}" "${timer}" > .syncconfig
  fi
  
  echo -e "${Green} »» Created config successfully. Use zsync to run."
  exit
fi


clear

if [ $? -eq 0 ]; then
  echo -e "${Green} »» Sync test successful."
else
  echo -e "${Red} »» Failed to sync files; check output for details."
  exit
fi

#Set sync interval and prep cli
if [ "$#" -eq 3 ]; then
  sync_interval=${3}
  echo -e "${Blue} »» Sync interval set to ${sync_interval} seconds."
else
  echo -e "${Yellow} »» No interval set; default set to 1s."
fi

if [ $is_remote = "0" ]; then
    echo -e "${Blue} »» Syncing from local ${1} to remote ${remotedir} every ${Yellow}${sync_interval}${Blue} second(s)."
else 
  echo -e "${Blue} »» Syncing from remote ${remotedir} to local ${1} every ${Yellow}${sync_interval}${Blue} second(s)."
fi

echo -e "${Yellow} »» Leave this tab running in the background. Use ${Red}CTRL+C ${Yellow}to stop sync."

#Perform continous sync
sync_icon=("-" "\\" "|" "/")
i=0

while true; 
do
  dosync

  if [ $? -ne 20 ]; then
    echo -en "${Blue} »» ${Yellow}${sync_icon[i]} ${Blue}Syncing..." "\r"
  else 
    echo -e "${Red} »» Sync interrupted, stopping..."
    exit
  fi

  i=`expr ${i} + 1`

  if [[ $i -eq 4 ]]; then
    i=0
  fi

  sleep ${sync_interval}
done
